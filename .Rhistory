knitr::opts_chunk$set(echo = TRUE)
obj <- read.plink('data/penncath')
library(snpStats)
obj <- read.plink('data/penncath')
obj <- read.plink('data/penncath')
cs <- col.summary(obj$genotypes)
rs <- row.summary(obj$genotypes)
hist(rs$Call.rate, main = 'Individuals Call rate')
hist(cs$Call.rate, main = 'SNPs Call rate')
keep <- cs$MAF > 0.001 &
cs$Call.rate > 0.9 &
obj$map$chromosome == 2
(obj$genotypes <- obj$genotypes[, keep])
obj$map <- obj$map[keep, ]
cs22 <- col.summary(obj$genotypes)
rs22 <- row.summary(obj$genotypes)
p_hwe <- 2*pnorm(-abs(cs22$z.HWE))
length(p_hwe)
hist(p_hwe)
source('code/qqunif.R')
source('code/qqunif.R')
qqunif_maxp(p_hwe, maxp= 0.01)
library(glue)
system(glue::glue("plink --bfile {work.dir}hapmapch22 --pca --out {work.dir}output/pca"))
system(glue::glue("plink --bfile data/penncath --pca --out pcaout"))
system(glue::glue("module load plink; plink --bfile data/penncath --pca --out pcaout"))
pcplink = read.table("output/pca.eigenvec",header=F, as.is=T)
names(pcplink) = c("FID","IID",paste0("PC", c(1:(ncol(pcplink)-2))) )
plot(pcplink$PC1, pcplink$PC2)
plot(pcplink$PC2, pcplink$PC3)
plot(pcplink$PC3, pcplink$PC4)
plot(pcplink$PC1, pcplink$PC2)
plot(pcplink$PC1, pcplink$PC2, ylim = c(-0.05, 0.05))
cs <- col.summary(obj$genotypes)
rs <- row.summary(obj$genotypes)
hist(rs$Call.rate, main = 'Individuals Call rate')
hist(cs$Call.rate, main = 'SNPs Call rate')
keep <- cs$MAF > 0.001 &
cs$Call.rate > 0.9
(obj$genotypes <- obj$genotypes[, keep])
obj$map <- obj$map[keep, ]
write.plink(
file.base = "data/qc_data",
snps = qc_data$genotypes,
pedigree = qc_data$fam$pedigree,
id = qc_data$fam$member,
father = qc_data$fam$father,
mother = qc_data$fam$mother,
sex = clinical$sex,
phenotype = clinical$CAD + 1,
chromosome = qc_data$map$chromosome,
genetic.distance = qc_data$map$cM,
position = qc_data$map$position,
allele.1 = qc_data$map$allele.1,
allele.2 = qc_data$map$allele.2
)
write.plink(
file.base = "data/qc_data",
snps = qc_data$genotypes,
pedigree = qc_data$fam$pedigree,
id = qc_data$fam$member,
father = qc_data$fam$father,
mother = qc_data$fam$mother,
sex = clinical$sex,
phenotype = clinical$CAD + 1,
chromosome = qc_data$map$chromosome,
genetic.distance = qc_data$map$cM,
position = qc_data$map$position,
allele.1 = qc_data$map$allele.1,
allele.2 = qc_data$map$allele.2
)
keep <- cs$MAF > 0.001 &
cs$Call.rate > 0.9
(obj$genotypes <- obj$genotypes[, keep])
obj$map <- obj$map[keep, ]
write.plink(
file.base = "data/qc",
snps = obj$genotypes,
pedigree = obj$fam$pedigree,
id = obj$fam$member,
father = obj$fam$father,
mother = obj$fam$mother,
sex = clinical$sex,
phenotype = clinical$CAD + 1,
chromosome = obj$map$chromosome,
genetic.distance = obj$map$cM,
position = obj$map$position,
allele.1 = obj$map$allele.1,
allele.2 = obj$map$allele.2
)
write.plink(
file.base = "data/qc",
snps = obj$genotypes,
pedigree = obj$fam$pedigree,
id = obj$fam$member,
father = obj$fam$father,
mother = obj$fam$mother,
chromosome = obj$map$chromosome,
genetic.distance = obj$map$cM,
position = obj$map$position,
allele.1 = obj$map$allele.1,
allele.2 = obj$map$allele.2
)
write.plink(
file.base = "data/qc",
snps = obj$genotypes,
pedigree = obj$fam$pedigree,
id = obj$fam$member,
father = obj$fam$father,
mother = obj$fam$mother,
chromosome = obj$map$chromosome,
genetic.distance = obj$map$cM,
position = obj$map$position,
allele.1 = obj$map$allele.1,
allele.2 = obj$map$allele.2
)
dim(obj$map)
obj <- read.plink('data/penncath')
obj <- read.plink('data/penncath')
pcplink = read.table("output/pca2.eigenvec",header=F, as.is=T)
names(pcplink) = c("FID","IID",paste0("PC", c(1:(ncol(pcplink)-2))) )
pcplink = read.table("output/pca22.eigenvec",header=F, as.is=T)
names(pcplink) = c("FID","IID",paste0("PC", c(1:(ncol(pcplink)-2))) )
plot(pcplink$PC1, pcplink$PC2)
cs <- col.summary(obj$genotypes)
rs <- row.summary(obj$genotypes)
p_hwe <- 2*pnorm(-abs(cs$z.HWE))
hist(-log10(p_hwe <- 2*pnorm(-abs(cs$z.HWE))))
hist(p_hwe)
hist(p_hwe, break = 100)
hist(p_hwe, nbreak = 100)
hist(p_hwe, breaks = 100)
p_hwe <- p_hwe[p_hwe > 1e-10]
hist(p_hwe, breaks = 100)
p_hwe <- p_hwe[p_hwe > 1e-10]
p_hwe <- 2*pnorm(-abs(cs$z.HWE))
hist(p_hwe, breaks = 100)
obj <- read.plink('data/geno')
x <- as(obj$genotypes[,143], 'numeric')
fisher.test(drop(x), clinical$CAD)
clinical <- fread('data/penncath.csv') %>%
mutate(across(.cols = c(sex, CAD),
.fns = as.factor))
x <- as(obj$genotypes[,143], 'numeric')
fisher.test(drop(x), clinical$CAD)
library(dplyr)
clinical <- fread('data/penncath.csv') %>%
mutate(across(.cols = c(sex, CAD),
.fns = as.factor))
x <- as(obj$genotypes[,143], 'numeric')
clinical <- fread('data/penncath.csv') %>%
mutate(across(.cols = c(sex, CAD),
.fns = as.factor))
x <- as(obj$genotypes[,143], 'numeric')
fisher.test(drop(x), clinical$CAD)
library(data.table)
clinical <- fread('data/penncath.csv') %>%
mutate(across(.cols = c(sex, CAD),
.fns = as.factor))
x <- as(obj$genotypes[,143], 'numeric')
cs <- col.summary(obj$genotypes)
rs <- row.summary(obj$genotypes)
hist(rs$Call.rate, main = 'Individuals Call rate')
hist(cs$Call.rate, main = 'SNPs Call rate')
p_hwe <- 2*pnorm(-abs(cs$z.HWE)) # hardy-weinberg equilibrium. extreme value may indicate genotype error.
keep <- cs$MAF > 0.001 &
cs$Call.rate > 0.9 &
abs(cs$z.HWE) < 6.5
(obj$genotypes <- obj$genotypes[, keep])
obj$map <- obj$map[keep, ]
# write plnik files for filtered data.
write.plink(
file.base = "data/geno.qc",
snps = obj$genotypes,
pedigree = obj$fam$pedigree,
id = obj$fam$member,
father = obj$fam$father,
mother = obj$fam$mother,
chromosome = obj$map$chromosome,
genetic.distance = obj$map$cM,
position = obj$map$position,
allele.1 = obj$map$allele.1,
allele.2 = obj$map$allele.2,
sex = clinical$sex,
phenotype = clinical$CAD + 1,
)
write.plink(
file.base = "data/geno.qc",
snps = obj$genotypes,
pedigree = obj$fam$pedigree,
id = obj$fam$member,
father = obj$fam$father,
mother = obj$fam$mother,
chromosome = obj$map$chromosome,
genetic.distance = obj$map$cM,
position = obj$map$position,
allele.1 = obj$map$allele.1,
allele.2 = obj$map$allele.2,
sex = clinical$sex,
phenotype = clinical$CAD + 1,
)
## read plink calculated PCs
pcplink = read.table("output/pca.eigenvec",header=F, as.is=T)
pcplink = read.table("output/pca.eigenvec",header=F, as.is=T)
names(pcplink) = c("FID","IID",paste0("PC", c(1:(ncol(pcplink)-2))) )
## plot PC1 vs PC2
plot(pcplink$PC1, pcplink$PC2)\
pcplink = read.table("output/pca.eigenvec",header=F, as.is=T)
names(pcplink) = c("FID","IID",paste0("PC", c(1:(ncol(pcplink)-2))) )
## plot PC1 vs PC2
plot(pcplink$PC1, pcplink$PC2)
head(pcplink)
head(obj$genotypes)
head(cs)
head(obj$fam)
keep <- pcplink[pcplink$PC1 < 0 & pcplink$PC2 <0.05,1]
objpop <- list()
objpop1$genotypes <- obj$genotypes[keep,]
keep <- pcplink$PC1 < 0 & pcplink$PC2 <0.05
objpop1$genotypes <- obj$genotypes[keep,]
objpop1 <- list()
objpop1$genotypes <- obj$genotypes[keep,]
cs <- col.summary(objpop1$genotypes)
p_hwepop1 <- 2*pnorm(-abs(cs$z.HWE))
hist(p_hwepop1)
keep <- pcplink[pcplink$PC1 < 0 & pcplink$PC2 <0.05,1]
objpop1$genotypes <- obj$genotypes[keep,]
keep
obj$genotypes
obj$genotypes[keep]
obj$genotypes[11596]
obj$genotypes["11596"]
objpop1$genotypes <- obj$genotypes[as.character(keep)]
p_hwepop1 <- 2*pnorm(-abs(cs$z.HWE))
hist(p_hwepop1)
dim(objpop1$genotypes)
plot(pcplink$PC1, pcplink$PC2)
keep <- pcplink[pcplink$PC1 < -0.01 & pcplink$PC2 <0.03,1]
objpop1 <- list()
objpop1$genotypes <- obj$genotypes[as.character(keep)]
cs <- col.summary(objpop1$genotypes)
p_hwepop1 <- 2*pnorm(-abs(cs$z.HWE))
hist(p_hwepop1)
hist(p_hwepop1)
plot(pcplink$PC1, pcplink$PC2)
keep <- pcplink[pcplink$PC1 < -0.01 & pcplink$PC2 <0.02,1]
objpop1 <- list()
objpop1$genotypes <- obj$genotypes[as.character(keep)]
cs <- col.summary(objpop1$genotypes)
p_hwepop1 <- 2*pnorm(-abs(cs$z.HWE))
hist(p_hwepop1)
hist(p_hwepop1)
hist(p_hwepop1, breaks = 100)
summary(p_hwepop1)
summary(log10(p_hwepop1))
cs <- col.summary(obj$genotypes)
rs <- row.summary(obj$genotypes)
hist(rs$Call.rate, main = 'Individuals Call rate')
hist(cs$Call.rate, main = 'SNPs Call rate')
p_hwe <- 2*pnorm(-abs(cs$z.HWE)) # hardy-weinberg equilibrium. extreme value may indicate genotype error.
keep <- cs$MAF > 0.001 &
cs$Call.rate > 0.9 &
abs(cs$z.HWE) < 6.5
(obj$genotypes <- obj$genotypes[, keep])
obj$map <- obj$map[keep, ]
# write plnik files for filtered data.
write.plink(
file.base = "data/geno.qc",
snps = obj$genotypes,
pedigree = obj$fam$pedigree,
id = obj$fam$member,
father = obj$fam$father,
mother = obj$fam$mother,
chromosome = obj$map$chromosome,
genetic.distance = obj$map$cM,
position = obj$map$position,
allele.1 = obj$map$allele.1,
allele.2 = obj$map$allele.2,
sex = clinical$sex,
phenotype = clinical$CAD + 1,
)
min()
keep <- pcplink[pcplink$PC1 < -0.01 & pcplink$PC2 <0.02,1]
objpop1 <- list()
objpop1$genotypes <- obj$genotypes[as.character(keep)]
cs <- col.summary(objpop1$genotypes)
p_hwepop1 <- 2*pnorm(-abs(cs$z.HWE))
hist(p_hwepop1 <- 2*pnorm(-abs(cs$z.HWE)))
min(p_hwepop1)
p_hwepop1 <- 2*pnorm(-abs(cs$z.HWE))
min(p_hwepop1)
min(p_hwepop1)
min(cs$z.HWE)
cs <- col.summary(objpop1$genotypes)
min(cs$z.HWE)
cs <- col.summary(obj$genotypes)
min(cs$z.HWE)
objpop1$genotypes
cs <- col.summary(objpop1$genotypes)
cs
table(cs$z.HWE)
summary(cs$z.HWE)
p_hwepop1 <- 2*pnorm(-abs(cs$z.HWE))
hist(p_hwepop1)
plot(pcplink$PC1, pcplink$PC2, col = pcplink$PC1 < -0.01 & pcplink$PC2 <0.02)
plot(pcplink$PC3, pcplink$PC4)
6.24/1401
dim(pcplink)
eigen = read.table("output/pca.eigenval",header=F, as.is=T)
plot(1:length(eigen, eigen/nrow(pcplink)), type = 'b', ylab = 'Proportion of variance explained', xlab = 'PC')
eigen
plot(1:length(eigen), eigen/nrow(pcplink), type = 'b', ylab = 'Proportion of variance explained', xlab = 'PC')
## plot variance explained by PCs
eigen = read.table("output/pca.eigenval",header=F, as.is=T)[,1]
eigen = read.table("output/pca.eigenval",header=F, as.is=T)[,1]
plot(1:length(eigen), eigen/nrow(pcplink), type = 'b', ylab = 'Proportion of variance explained', xlab = 'PC')
clinical$CAD
write.plink(
file.base = "data/geno.qc",
snps = obj$genotypes,
pedigree = obj$fam$pedigree,
id = obj$fam$member,
father = obj$fam$father,
mother = obj$fam$mother,
chromosome = obj$map$chromosome,
genetic.distance = obj$map$cM,
position = obj$map$position,
allele.1 = obj$map$allele.1,
allele.2 = obj$map$allele.2,
sex = clinical$sex,
phenotype = clinical$CAD + 1
)
(clinical <- fread('data/penncath.csv'))
(clinical <- fread('data/penncath.csv'))
write.plink(
file.base = "data/geno.qc",
snps = obj$genotypes,
pedigree = obj$fam$pedigree,
id = obj$fam$member,
father = obj$fam$father,
mother = obj$fam$mother,
chromosome = obj$map$chromosome,
genetic.distance = obj$map$cM,
position = obj$map$position,
allele.1 = obj$map$allele.1,
allele.2 = obj$map$allele.2,
sex = clinical$sex,
phenotype = clinical$CAD + 1
)
res <- fread('output/asso.assoc.logistic')
res <- res[res$TEST == "ADD",]
qqunif(res$P)
qqunif_maxp(res$P, maxp = 0.1)
library(qqman)
bim <- fread('data/geno.qc.bim')
# format data to have readable labels.
manh_data <- data.frame(
SNP = res$SNP,
P = res$P
) %>%
left_join(bim, by = c("SNP" = "V2")) %>%
rename(
CHR = V1,
BP = V4
) # recall that 'bim' files have a standardized format, so the column order is
# always the same
manh_plot <- manhattan(manh_data, ylim = c(0, 10), annotatePval = 5e-6)
manh_plot <- manhattan(manh_data, ylim = c(0, 10), annotatePval = 5e-6)
source("code/qqunif.R")
qqunif(res$P)
qqunif(res$P)
qqunif(res$P, mlog10_p_thres=12)
